bayesian_factor.df <- subset(bayesian_factor.df, snp %in% GWAS$SNP)
}
bayesian_factor.df <- bayesian_factor.df[(order(bayesian_factor.df$snp)),]
fgwas_file <- data.frame(SNPID = credible_input$SNPID,
CHR = credible_input$CHR,
POS = credible_input$POS,
Z = GWAS$Z,
F = GWAS$EAF,
N = GWAS$N,
SEGNUMBER = credible_input$SIGNAL,
LNBF = log(bayesian_factor.df$internal.sum.lABF))
annotations <- unique(tissue_annotation$V4)
unique_segments <- unique(fgwas_file$SEGNUMBER)
SEGMENTNUMBER = 0
for (unique_segment in unique_segments) {
SEGMENTNUMBER = SEGMENTNUMBER+1
index <- fgwas_file$SEGNUMBER == unique_segment
fgwas_file$SEGNUMBER[index] <- SEGMENTNUMBER
}
for (annotation in annotations) {
variant_annotation <- c()
annotation_bed = subset(tissue_annotation, V4 == annotation)
for (variant in fgwas_file$SNPID) {
snp = subset(fgwas_file, SNPID == variant)
regions_with_snp <- subset(annotation_bed, V1 == snp$CHR[1] & V2 < snp$POS[1] & V3 > snp$POS[1])
if(nrow(regions_with_snp) > 0){
variant_annotation <- append(variant_annotation, 1)
} else {
variant_annotation <- append(variant_annotation, 0)
}
}
if(annotation == '14_Bivalent/poised_TSS') {
annotation = '14_Bivalent_poised_TSS'
}
if(annotation == '18_Quiescent/low_signal') {
annotation = '18_Quiescent_low_signal'
}
fgwas_file[[annotation]] <- variant_annotation
}
fgwas_file <- fgwas_file[(order(fgwas_file$SEGNUMBER))]
return(fgwas_file)
}
WHRadjBMI$Z <- WHRadjBMI$BETA/(WHRadjBMI$VARBETA)^0.5
bf_directory <- '/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/gwas_colocalization_analysis/results/coloc_abf/bayesian_factors'
Adipose_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Adipose.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Liver_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Liver.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
SkeletalMuscle_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = SkeletalMuscle.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Islets_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Islets.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Coding_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Coding.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/formatted_data')
write.delim(Adipose_fGWAS_input, 'Adipose_fGWAS_input.txt')
write.delim(Islets_fGWAS_input, 'Islets_fGWAS_input.txt')
write.delim(Liver_fGWAS_input, 'Liver_fGWAS_input.txt')
write.delim(SkeletalMuscle_fGWAS_input, 'SkeletalMuscle_fGWAS_input.txt')
write.delim(Coding_fGWAS_input, 'Coding_fGWAS_input.txt')
View(Adipose_fGWAS_input)
## preparing each tissue's annotation file
fgwas_file_preparation <- function(credible_input, tissue_annotation,GWAS,bayesian_factor_directory){
setwd(bayesian_factor_directory)
bayesian_factors <- list.files()
first_bayesian_factor <- bayesian_factors[1]
bayesian_factors <- bayesian_factors[2:length(bayesian_factors)]
bayesian_factor.df <- read.delim(first_bayesian_factor)
for (bayesian_factor in bayesian_factors) {
temp_bayesian_factor.df <- read.delim(bayesian_factor)
bayesian_factor.df <- rbind(temp_bayesian_factor.df,bayesian_factor.df)
bayesian_factor.df <- subset(bayesian_factor.df, snp %in% GWAS$SNP)
}
bayesian_factor.df <- bayesian_factor.df[(order(bayesian_factor.df$snp)),]
fgwas_file <- data.frame(SNPID = credible_input$SNPID,
CHR = credible_input$CHR,
POS = credible_input$POS,
Z = GWAS$Z,
F = GWAS$EAF,
N = GWAS$N,
SEGNUMBER = credible_input$SIGNAL,
LNBF = log(bayesian_factor.df$internal.sum.lABF))
annotations <- unique(tissue_annotation$V4)
unique_segments <- unique(fgwas_file$SEGNUMBER)
SEGMENTNUMBER = 0
for (unique_segment in unique_segments) {
SEGMENTNUMBER = SEGMENTNUMBER+1
index <- fgwas_file$SEGNUMBER == unique_segment
fgwas_file$SEGNUMBER[index] <- SEGMENTNUMBER
}
for (annotation in annotations) {
variant_annotation <- c()
annotation_bed = subset(tissue_annotation, V4 == annotation)
for (variant in fgwas_file$SNPID) {
snp = subset(fgwas_file, SNPID == variant)
regions_with_snp <- subset(annotation_bed, V1 == snp$CHR[1] & V2 < snp$POS[1] & V3 > snp$POS[1])
if(nrow(regions_with_snp) > 0){
variant_annotation <- append(variant_annotation, 1)
} else {
variant_annotation <- append(variant_annotation, 0)
}
}
if(annotation == '14_Bivalent/poised_TSS') {
annotation = '14_Bivalent_poised_TSS'
}
if(annotation == '18_Quiescent/low_signal') {
annotation = '18_Quiescent_low_signal'
}
fgwas_file[[annotation]] <- variant_annotation
}
fgwas_file <- fgwas_file[(order(fgwas_file$SEGNUMBER))]
return(fgwas_file)
}
Adipose_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Adipose.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
## preparing each tissue's annotation file
fgwas_file_preparation <- function(credible_input, tissue_annotation,GWAS,bayesian_factor_directory){
setwd(bayesian_factor_directory)
bayesian_factors <- list.files()
first_bayesian_factor <- bayesian_factors[1]
bayesian_factors <- bayesian_factors[2:length(bayesian_factors)]
bayesian_factor.df <- read.delim(first_bayesian_factor)
for (bayesian_factor in bayesian_factors) {
temp_bayesian_factor.df <- read.delim(bayesian_factor)
bayesian_factor.df <- rbind(temp_bayesian_factor.df,bayesian_factor.df)
bayesian_factor.df <- subset(bayesian_factor.df, snp %in% GWAS$SNP)
}
bayesian_factor.df <- bayesian_factor.df[(order(bayesian_factor.df$snp)),]
fgwas_file <- data.frame(SNPID = credible_input$SNPID,
CHR = credible_input$CHR,
POS = credible_input$POS,
Z = GWAS$Z,
F = GWAS$EAF,
N = GWAS$N,
SEGNUMBER = credible_input$SIGNAL,
LNBF = log(bayesian_factor.df$internal.sum.lABF))
annotations <- unique(tissue_annotation$V4)
unique_segments <- unique(fgwas_file$SEGNUMBER)
SEGMENTNUMBER = 0
for (unique_segment in unique_segments) {
SEGMENTNUMBER = SEGMENTNUMBER+1
index <- fgwas_file$SEGNUMBER == unique_segment
fgwas_file$SEGNUMBER[index] <- SEGMENTNUMBER
}
for (annotation in annotations) {
variant_annotation <- c()
annotation_bed = subset(tissue_annotation, V4 == annotation)
for (variant in fgwas_file$SNPID) {
snp = subset(fgwas_file, SNPID == variant)
regions_with_snp <- subset(annotation_bed, V1 == snp$CHR[1] & V2 < snp$POS[1] & V3 > snp$POS[1])
if(nrow(regions_with_snp) > 0){
variant_annotation <- append(variant_annotation, 1)
} else {
variant_annotation <- append(variant_annotation, 0)
}
}
if(annotation == '14_Bivalent/poised_TSS') {
annotation = '14_Bivalent_poised_TSS'
}
if(annotation == '18_Quiescent/low_signal') {
annotation = '18_Quiescent_low_signal'
}
fgwas_file[[annotation]] <- variant_annotation
}
fgwas_file <- fgwas_file[(order(fgwas_file$SEGNUMBER)),]
return(fgwas_file)
}
Adipose_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Adipose.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Liver_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Liver.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
SkeletalMuscle_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = SkeletalMuscle.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Islets_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Islets.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Coding_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Coding.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/formatted_data')
write.delim(Adipose_fGWAS_input, 'Adipose_fGWAS_input.txt')
write.delim(Islets_fGWAS_input, 'Islets_fGWAS_input.txt')
write.delim(Liver_fGWAS_input, 'Liver_fGWAS_input.txt')
write.delim(SkeletalMuscle_fGWAS_input, 'SkeletalMuscle_fGWAS_input.txt')
write.delim(Coding_fGWAS_input, 'Coding_fGWAS_input.txt')
0
0
## preparing each tissue's annotation file
fgwas_file_preparation <- function(credible_input, tissue_annotation,GWAS,bayesian_factor_directory){
setwd(bayesian_factor_directory)
bayesian_factors <- list.files()
first_bayesian_factor <- bayesian_factors[1]
bayesian_factors <- bayesian_factors[2:length(bayesian_factors)]
bayesian_factor.df <- read.delim(first_bayesian_factor)
for (bayesian_factor in bayesian_factors) {
temp_bayesian_factor.df <- read.delim(bayesian_factor)
bayesian_factor.df <- rbind(temp_bayesian_factor.df,bayesian_factor.df)
bayesian_factor.df <- subset(bayesian_factor.df, snp %in% GWAS$SNP)
}
bayesian_factor.df <- bayesian_factor.df[(order(bayesian_factor.df$snp)),]
fgwas_file <- data.frame(SNPID = credible_input$SNPID,
CHR = credible_input$CHR,
POS = credible_input$POS,
Z = GWAS$Z,
F = GWAS$EAF,
N = GWAS$N,
SEGNUMBER = credible_input$SIGNAL,
LNBF = log(bayesian_factor.df$internal.sum.lABF))
annotations <- unique(tissue_annotation$V4)
unique_segments <- unique(fgwas_file$SEGNUMBER)
SEGMENTNUMBER = 0
for (unique_segment in unique_segments) {
SEGMENTNUMBER = SEGMENTNUMBER+1
index <- fgwas_file$SEGNUMBER == unique_segment
fgwas_file$SEGNUMBER[index] <- SEGMENTNUMBER
}
for (annotation in annotations) {
variant_annotation <- c()
annotation_bed = subset(tissue_annotation, V4 == annotation)
for (variant in fgwas_file$SNPID) {
snp = subset(fgwas_file, SNPID == variant)
regions_with_snp <- subset(annotation_bed, V1 == snp$CHR[1] & V2 < snp$POS[1] & V3 > snp$POS[1])
if(nrow(regions_with_snp) > 0){
variant_annotation <- append(variant_annotation, 1)
} else {
variant_annotation <- append(variant_annotation, 0)
}
}
if(annotation == '14_Bivalent/poised_TSS') {
annotation = '14_Bivalent_poised_TSS'
}
if(annotation == '18_Quiescent/low_signal') {
annotation = '18_Quiescent_low_signal'
}
fgwas_file[[annotation]] <- variant_annotation
}
fgwas_file$SEGNUMBER <- as.numeric(fgwas_file$SEGNUMBER)
fgwas_file <- fgwas_file[(order(fgwas_file$SEGNUMBER)),]
return(fgwas_file)
}
Adipose_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Adipose.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Liver_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Liver.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
SkeletalMuscle_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = SkeletalMuscle.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Islets_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Islets.chromatinStates.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
Coding_fGWAS_input <- fgwas_file_preparation(credible_input = snps_ordered,
tissue_annotation = Coding.df,
GWAS = WHRadjBMI,
bayesian_factor_directory = bf_directory)
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/formatted_data')
write.delim(Adipose_fGWAS_input, 'Adipose_fGWAS_input.txt')
write.delim(Islets_fGWAS_input, 'Islets_fGWAS_input.txt')
write.delim(Liver_fGWAS_input, 'Liver_fGWAS_input.txt')
write.delim(SkeletalMuscle_fGWAS_input, 'SkeletalMuscle_fGWAS_input.txt')
write.delim(Coding_fGWAS_input, 'Coding_fGWAS_input.txt')
fGWAS_enrichment_Combined <- fGWAS_enrichment_results('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results',
GWAS_name = 'Combined')
#### reformat fGWAS annotation results ------------------------------------------------
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results')
fGWAS_enrichment_results <- function(path, GWAS_name){
setwd(path)
bad_annotations <- c('ln(lk):',
'X-validation',
'ridgeparam:')
tissues <- list.dirs(path, recursive = F)
tissue_annotation_file <- data.frame(tissue = NA, annotation = NA, enrichment = NA)
for (tissue in tissues) {
annotation_path <- paste(tissue,'/',GWAS_name,'/','complete_model',sep = '')
tissue_name <- sub('.+/(.+)', '\\1', tissue)
setwd(annotation_path)
tissue_GWAS_annotation <- read.delim('complete_model.ridgeparams', sep = ' ', header = F)
tissue_GWAS_annotation$tissue <- tissue_name
tissue_GWAS_annotation <- subset(tissue_GWAS_annotation, V1 != 'ridgeparam:' & V1 != 'X-validation' )
tissue_GWAS_annotation <- data.frame(tissue = tissue_GWAS_annotation$tissue,
annotation = tissue_GWAS_annotation$V1,
enrichment = tissue_GWAS_annotation$V2)
tissue_annotation_file <- rbind.data.frame(tissue_annotation_file,tissue_GWAS_annotation)
setwd(path)
}
tissue_annotation_file <- subset(tissue_annotation_file, !(annotation %in% bad_annotations) & !is.na(annotation))
return(tissue_annotation_file)
}
fGWAS_enrichment_Combined <- fGWAS_enrichment_results('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results',
GWAS_name = 'Combined')
fGWAS_enrichment_Combined <- fGWAS_enrichment_results('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results',
GWAS_name = 'Combined')
fGWAS_enrichment_Combined <- fGWAS_enrichment_results('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results',
GWAS_name = 'Combined')
fGWAS_enrichment_results <- function(path, GWAS_name){
setwd(path)
bad_annotations <- c('ln(lk):',
'X-validation',
'ridgeparam:')
tissues <- list.dirs(path, recursive = F)
tissue_annotation_file <- data.frame(tissue = NA, annotation = NA, enrichment = NA)
for (tissue in tissues) {
annotation_path <- paste(tissue,'/',GWAS_name,'/',sep = '')
tissue_name <- sub('.+/(.+)', '\\1', tissue)
setwd(annotation_path)
tissue_GWAS_annotation <- read.delim('complete_model.ridgeparams', sep = ' ', header = F)
tissue_GWAS_annotation$tissue <- tissue_name
tissue_GWAS_annotation <- subset(tissue_GWAS_annotation, V1 != 'ridgeparam:' & V1 != 'X-validation' )
tissue_GWAS_annotation <- data.frame(tissue = tissue_GWAS_annotation$tissue,
annotation = tissue_GWAS_annotation$V1,
enrichment = tissue_GWAS_annotation$V2)
tissue_annotation_file <- rbind.data.frame(tissue_annotation_file,tissue_GWAS_annotation)
setwd(path)
}
tissue_annotation_file <- subset(tissue_annotation_file, !(annotation %in% bad_annotations) & !is.na(annotation))
return(tissue_annotation_file)
}
fGWAS_enrichment_Combined <- fGWAS_enrichment_results('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results',
GWAS_name = 'Combined')
View(fGWAS_enrichment_Combined)
#### reformat fGWAS annotation results ------------------------------------------------
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results')
fGWAS_enrichment_results <- function(path, GWAS_name){
setwd(path)
bad_annotations <- c('ln(lk):',
'X-validation',
'ridgeparam:')
tissues <- list.dirs(path, recursive = F)
tissue_annotation_file <- data.frame(tissue = NA, annotation = NA, enrichment = NA)
for (tissue in tissues) {
annotation_path <- paste(tissue,'/',GWAS_name,'/',sep = '')
tissue_name <- sub('.+/(.+)', '\\1', tissue)
setwd(annotation_path)
tissue_GWAS_annotation <- read.delim('complete_model.ridgeparams', sep = ' ', header = F)
tissue_GWAS_annotation$tissue <- tissue_name
tissue_GWAS_annotation <- subset(tissue_GWAS_annotation, V1 != 'ridgeparam:' & V1 != 'X-validation' )
tissue_GWAS_annotation <- data.frame(tissue = tissue_GWAS_annotation$tissue,
annotation = tissue_GWAS_annotation$V1,
enrichment = tissue_GWAS_annotation$V2)
tissue_annotation_file <- rbind.data.frame(tissue_annotation_file,tissue_GWAS_annotation)
setwd(path)
}
tissue_annotation_file <- subset(tissue_annotation_file, !(annotation %in% bad_annotations) & !is.na(annotation))
tissue_annotation_file$enrichment <- 2^(tissue_annotation_file$enrichment)
return(tissue_annotation_file)
}
fGWAS_enrichment_Combined <- fGWAS_enrichment_results('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results',
GWAS_name = 'Combined')
#### reformat fGWAS annotation results ------------------------------------------------
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results')
fGWAS_enrichment_results <- function(path, GWAS_name){
setwd(path)
bad_annotations <- c('ln(lk):',
'X-validation',
'ridgeparam:')
tissues <- list.dirs(path, recursive = F)
tissue_annotation_file <- data.frame(tissue = NA, annotation = NA, enrichment = NA)
for (tissue in tissues) {
annotation_path <- paste(tissue,'/',GWAS_name,'/',sep = '')
tissue_name <- sub('.+/(.+)', '\\1', tissue)
setwd(annotation_path)
tissue_GWAS_annotation <- read.delim('complete_model.ridgeparams', sep = ' ', header = F)
tissue_GWAS_annotation$tissue <- tissue_name
tissue_GWAS_annotation <- subset(tissue_GWAS_annotation, V1 != 'ridgeparam:' & V1 != 'X-validation' )
tissue_GWAS_annotation <- data.frame(tissue = tissue_GWAS_annotation$tissue,
annotation = tissue_GWAS_annotation$V1,
enrichment = tissue_GWAS_annotation$V2)
tissue_annotation_file <- rbind.data.frame(tissue_annotation_file,tissue_GWAS_annotation)
setwd(path)
}
tissue_annotation_file <- subset(tissue_annotation_file, !(annotation %in% bad_annotations) & !is.na(annotation))
tissue_annotation_file$enrichment <- 2^(as.numeric(tissue_annotation_file$enrichment))
return(tissue_annotation_file)
}
fGWAS_enrichment_Combined <- fGWAS_enrichment_results('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/fgwas_annotation/results',
GWAS_name = 'Combined')
write.delim(fGWAS_enrichment_Combined,'fGWAS_enrichment_Combined.txt')
Combined_snp.df <- annotate_snps(snp_file = "credible_input_corrected.txt",
tissue_path_file = "tissue_path.txt",
tissue_annotation_file = "fGWAS_enrichment_Combined_Tissues.txt",
genomic_path_file = "genomic_file_paths.txt",
genomic_annotation_file = "fGWAS_enrichment_Combined_Coding.txt")
#### execute TACTICAL ------------------------------------------------
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/tactical_no_brain/formatted_data')
Combined_snp.df <- annotate_snps(snp_file = "credible_input_corrected.txt",
tissue_path_file = "tissue_path.txt",
tissue_annotation_file = "fGWAS_enrichment_Combined_Tissues.txt",
genomic_path_file = "genomic_file_paths.txt",
genomic_annotation_file = "fGWAS_enrichment_Combined_Coding.txt")
#### execute TACTICAL ------------------------------------------------
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/tactical_no_brain/formatted_data')
Combined_snp.df <- annotate_snps(snp_file = "credible_input_corrected.txt",
tissue_path_file = "tissue_path.txt",
tissue_annotation_file = "fGWAS_enrichment_Combined_Tissues.txt",
genomic_path_file = "genomic_file_paths.txt",
genomic_annotation_file = "fGWAS_enrichment_Combined_Coding.txt")
Combined_tvec.df <- calculate_tissue_vectors(snp.annotated.df = Combined_snp.df,
tissue_annotation_file = "fGWAS_enrichment_Combined_Tissues.txt",
genomic_annotation_file = "fGWAS_enrichment_Combined_Coding.txt",
ess.annot = "Coding",
ess.file = "gene-expression-specificity-scores.txt")
Combined_tscores.df <- calculate_toa_scores(snp.tissvec.df = Combined_tvec.df)
Combined_tscores.df <- calculate_toa_scores(snp.tissvec.df = Combined_tvec.df)
View(Combined_tscores.df)
Combined_classified.df <- tissue_classifier(toa.df=Combined_tscores.df)
View(Combined_classified.df)
write.delim(Combined_classified.df, 'Combined_classified.txt')
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/tactical_no_brain/results')
write.delim(Combined_classified.df, 'Combined_classified.txt')
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/tactical_no_brain/results')
write.delim(Combined_classified.df, 'Combined_classified.txt')
#### map discordant genetic association signals to epigenetic annotations ------------------------------------------------
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/tactical_no_brain/formatted_data')
credible_input_corrected.df <- vroom('credible_input_corrected.txt')
discordant_genetic_signals <- subset(credible_input_corrected.df, SNPID %in% discordant_snps_99$SNP)
#### map discordant genetic association signals to epigenetic annotations ------------------------------------------------
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/tactical_no_brain/formatted_data')
credible_input_corrected.df <- vroom('credible_input_corrected.txt')
View(credible_input_corrected.df)
discordant_snps_99 <- subset(credible_99, sign(WHRadjBMI_Z) != sign(T2DadjBMI_Z))
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/credible_set/results/credible_sets')
credible_99 <- vroom('credible_99.txt')
View(credible_99)
sum(credible_99$SNP == T2DadjBMI$SNP)
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/credible_set/results/credible_sets')
credible_99 <- vroom('credible_99.txt')
WHRadjBMI <- subset(WHRadjBMI, SNP %in% credible_99$SNP)
T2DadjBMI <- subset(T2DadjBMI, SNP %in% credible_99$SNP)
BMI <- subset(BMI, SNP %in% credible_99$SNP)
credible_99 <- credible_99[(order(credible_99$SNP)),]
T2DadjBMI <- T2DadjBMI[(order(T2DadjBMI$SNP)),]
WHRadjBMI <- WHRadjBMI[(order(WHRadjBMI$SNP)),]
credible_99$WHRadjBMI_Z <- WHRadjBMI$BETA/(WHRadjBMI$VARBETA)^0.5
credible_99$T2DadjBMI_Z <- T2DadjBMI$BETA/(T2DadjBMI$VARBETA)^0.5
discordant_snps_99 <- subset(credible_99, sign(WHRadjBMI_Z) != sign(T2DadjBMI_Z))
discordant_genetic_signals <- subset(credible_input_corrected.df, SNPID %in% discordant_snps_99$SNP)
discordant_genetic_signals_mapped <- subset(WHRadjBMI_snp.df, SNPID %in% discordant_genetic_signals$SNPID)
discordant_genetic_signals_mapped <-
discordant_genetic_signals_mapped <- subset(Combined_snp.df, SNPID %in% discordant_genetic_signals$SNPID)
discordant_genetic_signals_mapped <- discordant_genetic_signals_mapped[,-c(1:5)]
View(discordant_genetic_signals_mapped)
View(discordant_genetic_signals_mapped)
unique(discordant_genetic_signals$SIGNAL)
#### discordant genetic association signals plotting ------------------------------------------------
Combined_discordant_signal_classification <- subset(Combined_classified.df, SIGNAL %in% discordant_genetic_signals$SIGNAL)
View(Combined_discordant_signal_classification)
Combined_discordant_signal_t_scores <- subset(Combined_tscores.df, SIGNAL %in% discordant_genetic_signals$SIGNAL)
View(Combined_tscores.df)
View(Combined_discordant_signal_t_scores)
#### load libraries ------------------------------------------------
{
library(vroom)
library(TACTICAL)
library(caroline)
library(ggplot2)
}
# Plot Combined classifications
melted_Combined_discordant_signal_t_scores <- melt(Combined_discordant_signal_t_scores)
#### load libraries ------------------------------------------------
{
library(vroom)
library(TACTICAL)
library(caroline)
library(ggplot2)
library(gridExtra)
library(reshape2)
}
# Plot Combined classifications
melted_Combined_discordant_signal_t_scores <- melt(Combined_discordant_signal_t_scores)
ggplot(melted_WHRadjBMI_discordant_signal_t_scores, aes(fill=variable, y=value, x=SIGNAL)) +
geom_bar(position="fill", stat="identity")
ggplot(melted_Combined_discordant_signal_t_scores, aes(fill=variable, y=value, x=SIGNAL)) +
geom_bar(position="fill", stat="identity")
ggsave(filename = 'WHRadjBMI_discordant_signal_t_scores.png', units = 'in', height = 5, width = 15)
ggsave(filename = 'Combined_discordant_signal_t_scores.png', units = 'in', height = 5, width = 15)
# Plot Combined classifications
melted_Combined_discordant_signal_t_scores <- melt(Combined_discordant_signal_t_scores)
ggplot(melted_Combined_discordant_signal_t_scores, aes(fill=variable, y=value, x=SIGNAL)) +
geom_bar(position="fill", stat="identity")
ggsave(filename = 'Combined_discordant_signal_t_scores.png', units = 'in', height = 5, width = 15)
# Plot T2DadjBMI classifications
setwd('/Users/ya8eb/Documents/Research/colocalization_analysis_whradjbmi_t2dadjbmi/tactical_no_brain/figures')
# Plot Combined classifications
melted_Combined_discordant_signal_t_scores <- melt(Combined_discordant_signal_t_scores)
ggplot(melted_Combined_discordant_signal_t_scores, aes(fill=variable, y=value, x=SIGNAL)) +
geom_bar(position="fill", stat="identity")
ggsave(filename = 'Combined_discordant_signal_t_scores.png', units = 'in', height = 5, width = 15)
